/* Constants from `yaml_encoding` */

/*! @decl constant ANY_ENCODING */
add_integer_constant ("ANY_ENCODING",
                      YAML_ANY_ENCODING, 0);
/*! @decl constant UTF16BE_ENCODING */
add_integer_constant ("UTF16BE_ENCODING",
                      YAML_UTF16BE_ENCODING, 0);
/*! @decl constant UTF16LE_ENCODING */
add_integer_constant ("UTF16LE_ENCODING",
                      YAML_UTF16LE_ENCODING, 0);
/*! @decl constant UTF8_ENCODING */
add_integer_constant ("UTF8_ENCODING",
                      YAML_UTF8_ENCODING, 0);

/* Constants from `yaml_break` */

/*! @decl constant ANY_BREAK */
add_integer_constant ("ANY_BREAK",
                      YAML_ANY_BREAK, 0);
/*! @decl constant CRLN_BREAK */
add_integer_constant ("CRLN_BREAK",
                      YAML_CRLN_BREAK, 0);
/*! @decl constant CR_BREAK */
add_integer_constant ("CR_BREAK",
                      YAML_CR_BREAK, 0);
/*! @decl constant LN_BREAK */
add_integer_constant ("LN_BREAK",
                      YAML_LN_BREAK, 0);

/* Constants from `yaml_error_type` */

/*! @decl constant COMPOSER_ERROR */
add_integer_constant ("COMPOSER_ERROR",
                      YAML_COMPOSER_ERROR, 0);
/*! @decl constant EMITTER_ERROR */
add_integer_constant ("EMITTER_ERROR",
                      YAML_EMITTER_ERROR, 0);
/*! @decl constant MEMORY_ERROR */
add_integer_constant ("MEMORY_ERROR",
                      YAML_MEMORY_ERROR, 0);
/*! @decl constant NO_ERROR */
add_integer_constant ("NO_ERROR",
                      YAML_NO_ERROR, 0);
/*! @decl constant PARSER_ERROR */
add_integer_constant ("PARSER_ERROR",
                      YAML_PARSER_ERROR, 0);
/*! @decl constant READER_ERROR */
add_integer_constant ("READER_ERROR",
                      YAML_READER_ERROR, 0);
/*! @decl constant SCANNER_ERROR */
add_integer_constant ("SCANNER_ERROR",
                      YAML_SCANNER_ERROR, 0);
/*! @decl constant WRITER_ERROR */
add_integer_constant ("WRITER_ERROR",
                      YAML_WRITER_ERROR, 0);

/* Constants from `yaml_scalar_style` */

/*! @decl constant ANY_SCALAR_STYLE */
add_integer_constant ("ANY_SCALAR_STYLE",
                      YAML_ANY_SCALAR_STYLE, 0);
/*! @decl constant DOUBLE_QUOTED_SCALAR_STYLE */
add_integer_constant ("DOUBLE_QUOTED_SCALAR_STYLE",
                      YAML_DOUBLE_QUOTED_SCALAR_STYLE, 0);
/*! @decl constant FOLDED_SCALAR_STYLE */
add_integer_constant ("FOLDED_SCALAR_STYLE",
                      YAML_FOLDED_SCALAR_STYLE, 0);
/*! @decl constant LITERAL_SCALAR_STYLE */
add_integer_constant ("LITERAL_SCALAR_STYLE",
                      YAML_LITERAL_SCALAR_STYLE, 0);
/*! @decl constant PLAIN_SCALAR_STYLE */
add_integer_constant ("PLAIN_SCALAR_STYLE",
                      YAML_PLAIN_SCALAR_STYLE, 0);
/*! @decl constant SINGLE_QUOTED_SCALAR_STYLE */
add_integer_constant ("SINGLE_QUOTED_SCALAR_STYLE",
                      YAML_SINGLE_QUOTED_SCALAR_STYLE, 0);

/* Constants from `yaml_sequence_style` */

/*! @decl constant ANY_SEQUENCE_STYLE */
add_integer_constant ("ANY_SEQUENCE_STYLE",
                      YAML_ANY_SEQUENCE_STYLE, 0);
/*! @decl constant BLOCK_SEQUENCE_STYLE */
add_integer_constant ("BLOCK_SEQUENCE_STYLE",
                      YAML_BLOCK_SEQUENCE_STYLE, 0);
/*! @decl constant FLOW_SEQUENCE_STYLE */
add_integer_constant ("FLOW_SEQUENCE_STYLE",
                      YAML_FLOW_SEQUENCE_STYLE, 0);

/* Constants from `yaml_mapping_style` */

/*! @decl constant ANY_MAPPING_STYLE */
add_integer_constant ("ANY_MAPPING_STYLE",
                      YAML_ANY_MAPPING_STYLE, 0);
/*! @decl constant BLOCK_MAPPING_STYLE */
add_integer_constant ("BLOCK_MAPPING_STYLE",
                      YAML_BLOCK_MAPPING_STYLE, 0);
/*! @decl constant FLOW_MAPPING_STYLE */
add_integer_constant ("FLOW_MAPPING_STYLE",
                      YAML_FLOW_MAPPING_STYLE, 0);

/* Constants from `yaml_token_type` */

/*! @decl constant ALIAS_TOKEN */
add_integer_constant ("ALIAS_TOKEN",
                      YAML_ALIAS_TOKEN, 0);
/*! @decl constant ANCHOR_TOKEN */
add_integer_constant ("ANCHOR_TOKEN",
                      YAML_ANCHOR_TOKEN, 0);
/*! @decl constant BLOCK_END_TOKEN */
add_integer_constant ("BLOCK_END_TOKEN",
                      YAML_BLOCK_END_TOKEN, 0);
/*! @decl constant BLOCK_ENTRY_TOKEN */
add_integer_constant ("BLOCK_ENTRY_TOKEN",
                      YAML_BLOCK_ENTRY_TOKEN, 0);
/*! @decl constant BLOCK_MAPPING_START_TOKEN */
add_integer_constant ("BLOCK_MAPPING_START_TOKEN",
                      YAML_BLOCK_MAPPING_START_TOKEN, 0);
/*! @decl constant BLOCK_SEQUENCE_START_TOKEN */
add_integer_constant ("BLOCK_SEQUENCE_START_TOKEN",
                      YAML_BLOCK_SEQUENCE_START_TOKEN, 0);
/*! @decl constant DOCUMENT_END_TOKEN */
add_integer_constant ("DOCUMENT_END_TOKEN",
                      YAML_DOCUMENT_END_TOKEN, 0);
/*! @decl constant DOCUMENT_START_TOKEN */
add_integer_constant ("DOCUMENT_START_TOKEN",
                      YAML_DOCUMENT_START_TOKEN, 0);
/*! @decl constant FLOW_ENTRY_TOKEN */
add_integer_constant ("FLOW_ENTRY_TOKEN",
                      YAML_FLOW_ENTRY_TOKEN, 0);
/*! @decl constant FLOW_MAPPING_END_TOKEN */
add_integer_constant ("FLOW_MAPPING_END_TOKEN",
                      YAML_FLOW_MAPPING_END_TOKEN, 0);
/*! @decl constant FLOW_MAPPING_START_TOKEN */
add_integer_constant ("FLOW_MAPPING_START_TOKEN",
                      YAML_FLOW_MAPPING_START_TOKEN, 0);
/*! @decl constant FLOW_SEQUENCE_END_TOKEN */
add_integer_constant ("FLOW_SEQUENCE_END_TOKEN",
                      YAML_FLOW_SEQUENCE_END_TOKEN, 0);
/*! @decl constant FLOW_SEQUENCE_START_TOKEN */
add_integer_constant ("FLOW_SEQUENCE_START_TOKEN",
                      YAML_FLOW_SEQUENCE_START_TOKEN, 0);
/*! @decl constant KEY_TOKEN */
add_integer_constant ("KEY_TOKEN",
                      YAML_KEY_TOKEN, 0);
/*! @decl constant NO_TOKEN */
add_integer_constant ("NO_TOKEN",
                      YAML_NO_TOKEN, 0);
/*! @decl constant SCALAR_TOKEN */
add_integer_constant ("SCALAR_TOKEN",
                      YAML_SCALAR_TOKEN, 0);
/*! @decl constant STREAM_END_TOKEN */
add_integer_constant ("STREAM_END_TOKEN",
                      YAML_STREAM_END_TOKEN, 0);
/*! @decl constant STREAM_START_TOKEN */
add_integer_constant ("STREAM_START_TOKEN",
                      YAML_STREAM_START_TOKEN, 0);
/*! @decl constant TAG_DIRECTIVE_TOKEN */
add_integer_constant ("TAG_DIRECTIVE_TOKEN",
                      YAML_TAG_DIRECTIVE_TOKEN, 0);
/*! @decl constant TAG_TOKEN */
add_integer_constant ("TAG_TOKEN",
                      YAML_TAG_TOKEN, 0);
/*! @decl constant VALUE_TOKEN */
add_integer_constant ("VALUE_TOKEN",
                      YAML_VALUE_TOKEN, 0);
/*! @decl constant VERSION_DIRECTIVE_TOKEN */
add_integer_constant ("VERSION_DIRECTIVE_TOKEN",
                      YAML_VERSION_DIRECTIVE_TOKEN, 0);

/* Constants from `yaml_event_type` */

/*! @decl constant ALIAS_EVENT */
add_integer_constant ("ALIAS_EVENT",
                      YAML_ALIAS_EVENT, 0);
/*! @decl constant DOCUMENT_END_EVENT */
add_integer_constant ("DOCUMENT_END_EVENT",
                      YAML_DOCUMENT_END_EVENT, 0);
/*! @decl constant DOCUMENT_START_EVENT */
add_integer_constant ("DOCUMENT_START_EVENT",
                      YAML_DOCUMENT_START_EVENT, 0);
/*! @decl constant MAPPING_END_EVENT */
add_integer_constant ("MAPPING_END_EVENT",
                      YAML_MAPPING_END_EVENT, 0);
/*! @decl constant MAPPING_START_EVENT */
add_integer_constant ("MAPPING_START_EVENT",
                      YAML_MAPPING_START_EVENT, 0);
/*! @decl constant NO_EVENT */
add_integer_constant ("NO_EVENT",
                      YAML_NO_EVENT, 0);
/*! @decl constant SCALAR_EVENT */
add_integer_constant ("SCALAR_EVENT",
                      YAML_SCALAR_EVENT, 0);
/*! @decl constant SEQUENCE_END_EVENT */
add_integer_constant ("SEQUENCE_END_EVENT",
                      YAML_SEQUENCE_END_EVENT, 0);
/*! @decl constant SEQUENCE_START_EVENT */
add_integer_constant ("SEQUENCE_START_EVENT",
                      YAML_SEQUENCE_START_EVENT, 0);
/*! @decl constant STREAM_END_EVENT */
add_integer_constant ("STREAM_END_EVENT",
                      YAML_STREAM_END_EVENT, 0);
/*! @decl constant STREAM_START_EVENT */
add_integer_constant ("STREAM_START_EVENT",
                      YAML_STREAM_START_EVENT, 0);

/* Constants from `yaml_node_type` */

/*! @decl constant MAPPING_NODE */
add_integer_constant ("MAPPING_NODE",
                      YAML_MAPPING_NODE, 0);
/*! @decl constant NO_NODE */
add_integer_constant ("NO_NODE",
                      YAML_NO_NODE, 0);
/*! @decl constant SCALAR_NODE */
add_integer_constant ("SCALAR_NODE",
                      YAML_SCALAR_NODE, 0);
/*! @decl constant SEQUENCE_NODE */
add_integer_constant ("SEQUENCE_NODE",
                      YAML_SEQUENCE_NODE, 0);

/* Constants from `yaml_parser_state` */

/*! @decl constant PARSE_BLOCK_MAPPING_FIRST_KEY_STATE */
add_integer_constant ("PARSE_BLOCK_MAPPING_FIRST_KEY_STATE",
                      YAML_PARSE_BLOCK_MAPPING_FIRST_KEY_STATE, 0);
/*! @decl constant PARSE_BLOCK_MAPPING_KEY_STATE */
add_integer_constant ("PARSE_BLOCK_MAPPING_KEY_STATE",
                      YAML_PARSE_BLOCK_MAPPING_KEY_STATE, 0);
/*! @decl constant PARSE_BLOCK_MAPPING_VALUE_STATE */
add_integer_constant ("PARSE_BLOCK_MAPPING_VALUE_STATE",
                      YAML_PARSE_BLOCK_MAPPING_VALUE_STATE, 0);
/*! @decl constant PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE */
add_integer_constant ("PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE",
                      YAML_PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE, 0);
/*! @decl constant PARSE_BLOCK_NODE_STATE */
add_integer_constant ("PARSE_BLOCK_NODE_STATE",
                      YAML_PARSE_BLOCK_NODE_STATE, 0);
/*! @decl constant PARSE_BLOCK_SEQUENCE_ENTRY_STATE */
add_integer_constant ("PARSE_BLOCK_SEQUENCE_ENTRY_STATE",
                      YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE, 0);
/*! @decl constant PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE */
add_integer_constant ("PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE",
                      YAML_PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE, 0);
/*! @decl constant PARSE_DOCUMENT_CONTENT_STATE */
add_integer_constant ("PARSE_DOCUMENT_CONTENT_STATE",
                      YAML_PARSE_DOCUMENT_CONTENT_STATE, 0);
/*! @decl constant PARSE_DOCUMENT_END_STATE */
add_integer_constant ("PARSE_DOCUMENT_END_STATE",
                      YAML_PARSE_DOCUMENT_END_STATE, 0);
/*! @decl constant PARSE_DOCUMENT_START_STATE */
add_integer_constant ("PARSE_DOCUMENT_START_STATE",
                      YAML_PARSE_DOCUMENT_START_STATE, 0);
/*! @decl constant PARSE_END_STATE */
add_integer_constant ("PARSE_END_STATE",
                      YAML_PARSE_END_STATE, 0);
/*! @decl constant PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE */
add_integer_constant ("PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE",
                      YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE, 0);
/*! @decl constant PARSE_FLOW_MAPPING_FIRST_KEY_STATE */
add_integer_constant ("PARSE_FLOW_MAPPING_FIRST_KEY_STATE",
                      YAML_PARSE_FLOW_MAPPING_FIRST_KEY_STATE, 0);
/*! @decl constant PARSE_FLOW_MAPPING_KEY_STATE */
add_integer_constant ("PARSE_FLOW_MAPPING_KEY_STATE",
                      YAML_PARSE_FLOW_MAPPING_KEY_STATE, 0);
/*! @decl constant PARSE_FLOW_MAPPING_VALUE_STATE */
add_integer_constant ("PARSE_FLOW_MAPPING_VALUE_STATE",
                      YAML_PARSE_FLOW_MAPPING_VALUE_STATE, 0);
/*! @decl constant PARSE_FLOW_NODE_STATE */
add_integer_constant ("PARSE_FLOW_NODE_STATE",
                      YAML_PARSE_FLOW_NODE_STATE, 0);
/*! @decl constant PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE */
add_integer_constant ("PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE",
                      YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE, 0);
/*! @decl constant PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE */
add_integer_constant ("PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE",
                      YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE, 0);
/*! @decl constant PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE */
add_integer_constant ("PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE",
                      YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE, 0);
/*! @decl constant PARSE_FLOW_SEQUENCE_ENTRY_STATE */
add_integer_constant ("PARSE_FLOW_SEQUENCE_ENTRY_STATE",
                      YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE, 0);
/*! @decl constant PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE */
add_integer_constant ("PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE",
                      YAML_PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE, 0);
/*! @decl constant PARSE_IMPLICIT_DOCUMENT_START_STATE */
add_integer_constant ("PARSE_IMPLICIT_DOCUMENT_START_STATE",
                      YAML_PARSE_IMPLICIT_DOCUMENT_START_STATE, 0);
/*! @decl constant PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE */
add_integer_constant ("PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE",
                      YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE, 0);
/*! @decl constant PARSE_STREAM_START_STATE */
add_integer_constant ("PARSE_STREAM_START_STATE",
                      YAML_PARSE_STREAM_START_STATE, 0);

/* Constants from `yaml_emitter_state` */

/*! @decl constant EMIT_BLOCK_MAPPING_FIRST_KEY_STATE */
add_integer_constant ("EMIT_BLOCK_MAPPING_FIRST_KEY_STATE",
                      YAML_EMIT_BLOCK_MAPPING_FIRST_KEY_STATE, 0);
/*! @decl constant EMIT_BLOCK_MAPPING_KEY_STATE */
add_integer_constant ("EMIT_BLOCK_MAPPING_KEY_STATE",
                      YAML_EMIT_BLOCK_MAPPING_KEY_STATE, 0);
/*! @decl constant EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE */
add_integer_constant ("EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE",
                      YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE, 0);
/*! @decl constant EMIT_BLOCK_MAPPING_VALUE_STATE */
add_integer_constant ("EMIT_BLOCK_MAPPING_VALUE_STATE",
                      YAML_EMIT_BLOCK_MAPPING_VALUE_STATE, 0);
/*! @decl constant EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE */
add_integer_constant ("EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE",
                      YAML_EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE, 0);
/*! @decl constant EMIT_BLOCK_SEQUENCE_ITEM_STATE */
add_integer_constant ("EMIT_BLOCK_SEQUENCE_ITEM_STATE",
                      YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE, 0);
/*! @decl constant EMIT_DOCUMENT_CONTENT_STATE */
add_integer_constant ("EMIT_DOCUMENT_CONTENT_STATE",
                      YAML_EMIT_DOCUMENT_CONTENT_STATE, 0);
/*! @decl constant EMIT_DOCUMENT_END_STATE */
add_integer_constant ("EMIT_DOCUMENT_END_STATE",
                      YAML_EMIT_DOCUMENT_END_STATE, 0);
/*! @decl constant EMIT_DOCUMENT_START_STATE */
add_integer_constant ("EMIT_DOCUMENT_START_STATE",
                      YAML_EMIT_DOCUMENT_START_STATE, 0);
/*! @decl constant EMIT_END_STATE */
add_integer_constant ("EMIT_END_STATE",
                      YAML_EMIT_END_STATE, 0);
/*! @decl constant EMIT_FIRST_DOCUMENT_START_STATE */
add_integer_constant ("EMIT_FIRST_DOCUMENT_START_STATE",
                      YAML_EMIT_FIRST_DOCUMENT_START_STATE, 0);
/*! @decl constant EMIT_FLOW_MAPPING_FIRST_KEY_STATE */
add_integer_constant ("EMIT_FLOW_MAPPING_FIRST_KEY_STATE",
                      YAML_EMIT_FLOW_MAPPING_FIRST_KEY_STATE, 0);
/*! @decl constant EMIT_FLOW_MAPPING_KEY_STATE */
add_integer_constant ("EMIT_FLOW_MAPPING_KEY_STATE",
                      YAML_EMIT_FLOW_MAPPING_KEY_STATE, 0);
/*! @decl constant EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE */
add_integer_constant ("EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE",
                      YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE, 0);
/*! @decl constant EMIT_FLOW_MAPPING_VALUE_STATE */
add_integer_constant ("EMIT_FLOW_MAPPING_VALUE_STATE",
                      YAML_EMIT_FLOW_MAPPING_VALUE_STATE, 0);
/*! @decl constant EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE */
add_integer_constant ("EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE",
                      YAML_EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE, 0);
/*! @decl constant EMIT_FLOW_SEQUENCE_ITEM_STATE */
add_integer_constant ("EMIT_FLOW_SEQUENCE_ITEM_STATE",
                      YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE, 0);
/*! @decl constant EMIT_STREAM_START_STATE */
add_integer_constant ("EMIT_STREAM_START_STATE",
                      YAML_EMIT_STREAM_START_STATE, 0);

/*! @decl constant NULL_TAG
 *! The tag @@c !!null with the only possible value: @@c null.
*/
add_string_constant ("NULL_TAG", YAML_NULL_TAG, 0);

/*! @decl constant BOOL_TAG
 *! The tag @@c !!bool with the values: @@c true and @@c falce.
*/
add_string_constant ("BOOL_TAG", YAML_BOOL_TAG, 0);

/*! @decl constant STR_TAG
 *! The tag @@c !!str for string values.
*/
add_string_constant ("STR_TAG", YAML_STR_TAG, 0);

/*! @decl constant INT_TAG
 *! The tag @@c !!int for integer values.
*/
add_string_constant ("INT_TAG", YAML_INT_TAG, 0);

/*! @decl constant FLOAT_TAG
 *! The tag @@c !!float for float values.
*/
add_string_constant ("FLOAT_TAG", YAML_FLOAT_TAG, 0);

/*! @decl constant TIMESTAMP_TAG
 *! The tag @@c !!timestamp for date and time values.
*/
add_string_constant ("TIMESTAMP_TAG", YAML_TIMESTAMP_TAG, 0);

/*! @decl constant SEQ_TAG
 *! The tag @@c !!seq is used to denote sequences.
*/
add_string_constant ("SEQ_TAG", YAML_SEQ_TAG, 0);

/*! @decl constant MAP_TAG
 *! The tag @@c !!map is used to denote mapping.
*/
add_string_constant ("MAP_TAG", YAML_MAP_TAG, 0);

/*! @decl constant DEFAULT_SCALAR_TAG
 *! The default scalar tag is @@c !!str.
*/
add_string_constant ("DEFAULT_SCALAR_TAG", YAML_DEFAULT_SCALAR_TAG, 0);

/*! @decl constant DEFAULT_SEQUENCE_TAG
 *! The default sequence tag is @@c !!seq.
*/
add_string_constant ("DEFAULT_SEQUENCE_TAG", YAML_DEFAULT_SEQUENCE_TAG, 0);

/*! @decl constant DEFAULT_MAPPING_TAG
 *! The default mapping tag is @@c !!map.
*/
add_string_constant ("DEFAULT_MAPPING_TAG", YAML_DEFAULT_MAPPING_TAG, 0);

